import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:svar_new/core/utils/pref_utils.dart';
import 'package:svar_new/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generatorif (!_supportedCustomColor.containsKey(_appTheme)){  throw Exception(               "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");      } //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator if (!_supportedColorScheme.containsKey(_appTheme)){   throw Exception(                "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");       }  //return theme from map
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.whiteA70001,
            width: 2,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 23,
        space: 23,
        color: appTheme.orangeA200,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        displaySmall: TextStyle(
          color: appTheme.black90001,
          fontSize: 36.fSize,
          fontFamily: 'Jokerman',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.teal90004,
          fontSize: 13.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 11.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w900,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 20.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w800,
        ),
        titleSmall: TextStyle(
          color: appTheme.teal90004,
          fontSize: 14.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w800,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber900 => Color(0XFFFF7300);

  // Black
  Color get black90001 => Color(0XFF000000);

  // BlueGray
  Color get blueGray400 => Color(0XFF888888);

  // Cyan
  Color get cyan100 => Color(0XFFB4FAFF);
  Color get cyan200 => Color(0XFF8CECF3);
  Color get cyanA100 => Color(0XFF8EF7FF);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFD0B0);
  Color get deepOrange10002 => Color(0XFFFFCAAB);
  Color get deepOrange200 => Color(0XFFF2BE99);
  Color get deepOrange300 => Color(0XFFFA9960);
  Color get deepOrange30002 => Color(0XFFFF8E4C);
  Color get deepOrange40001 => Color(0XFFF68643);
  Color get deepOrange600 => Color(0XFFE86124);
  Color get deepOrange60001 => Color(0XFFE45C22);
  Color get deepOrange700 => Color(0XFFDC4A26);
  Color get deepOrange70001 => Color(0XFFE25820);
  Color get deepOrange70002 => Color(0XFFE25A21);
  Color get deepOrangeA100 => Color(0XFFFFA16A);
  Color get deepOrangeA20001 => Color(0XFFF27C36);

  // Gray
  Color get gray50 => Color(0XFFFFF9F5);
  Color get gray5001 => Color(0XFFF9F9F9);
  Color get gray5003 => Color(0XFFF5FFFF);
  Color get gray5004 => Color(0XFFFAFAFA);

  // Green
  Color get green30001 => Color(0XFF79FD6D);
  Color get green400 => Color(0XFF75BD5A);

  // LightBlue
  Color get lightBlueA200 => Color(0XFF2ACCFF);

  // LightGreen
  Color get lightGreen400 => Color(0XFFA8DE5A);
  Color get lightGreen800 => Color(0XFF57912C);
  Color get lightGreen80001 => Color(0XFF429600);
  Color get lightGreenA700 => Color(0XFF68F824);

  // Orange
  Color get orange100 => Color(0XFFFFCEA5);
  Color get orange10001 => Color(0XFFFDDFC7);
  Color get orange5000 => Color(0X00FFF0E5);
  Color get orange900 => Color(0XFFD54E00);
  Color get orange90001 => Color(0XFFCA5B00);
  Color get orangeA200 => Color(0XFFFF9A3E);
  Color get orangeA700 => Color(0XFFF96900);

  // Red
  Color get red100 => Color(0XFFFDE2CF);
  Color get red10001 => Color(0XFFFEDFC8);

  // Teal
  Color get teal90004 => Color(0XFF023D33);

  // White
  Color get whiteA700 => Color(0XFFFFFEFD);
  Color get whiteA70001 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow500 => Color(0XFFF0E92D);
  Color get yellow700 => Color(0XFFFFB62A);
  Color get yellow70001 => Color(0XFFFFB629);
  Color get yellow90003 => Color(0XFFEF8521);
  Color get yellow90004 => Color(0XFFE86C23);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
