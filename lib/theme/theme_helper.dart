
import 'package:flutter/material.dart';
import 'package:svar_new/core/utils/pref_utils.dart';
import 'package:svar_new/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
// The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
//throw exception to notify given theme is not found or not generated by the generatorif (!_supportedCustomColor.containsKey(_appTheme)){  throw Exception(               "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");      } //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
//throw exception to notify given theme is not found or not generated by the generator if (!_supportedColorScheme.containsKey(_appTheme)){   throw Exception(                "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");       }  //return theme from map
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.whiteA70001,
            width: 4,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(18),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 23,
        space: 23,
        color: appTheme.orangeA200,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        displayLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 55.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        displayMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 40.fSize,
          fontFamily: 'Jokerman',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 36.fSize,
          fontFamily: 'Jokerman',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 30.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.teal90001,
          fontSize: 27.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w900,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 24.fSize,
          fontFamily: 'Tiro Devanagari Hindi',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.teal90003,
          fontSize: 13.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 11.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w900,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 9.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 20.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w800,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 18.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w800,
        ),
        titleSmall: TextStyle(
          color: appTheme.teal90003,
          fontSize: 14.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w800,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
// Primary colors
    primary: Color(0XFF79FD6D),
    primaryContainer: Color(0XFF693900),

// Error colors
    errorContainer: Color(0XFFFF7A00),
    onError: Color(0XFFD9D9D9),
    onErrorContainer: Color(0XFF1E1E1E),

// On colors(text colors)
    onPrimary: Color(0XFF013129),
    onPrimaryContainer: Color(0XFF030303),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
// Amber
  Color get amber100 => Color(0XFFFFE6BD);
  Color get amber600 => Color(0XFFFBB400);
  Color get amber60001 => Color(0XFFFAB400);
  Color get amber900 => Color(0XFFFF7300);
  Color get amber90001 => Color.fromARGB(255, 255, 188, 125);

// AmberD
  Color get amber600D8 => Color(0XD8FBB500);

// Black
  Color get black900 => Color(0XFF000000);

// Blue
  Color get blue200 => Color(0XFF92D6F2);
  Color get blue20001 => Color(0XFF87CEEB);
  Color get blue300 => Color(0XFF5B9DFF);
  Color get blue50 => Color(0XFFE8F0FA);
  Color get blueA200 => Color(0XFF4299FF);

// BlueGray
  Color get blueGray100 => Color(0XFFCBCBCB);
  Color get blueGray10001 => Color(0XFFD3D3D3);
  Color get blueGray10002 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFF1F1F1);
  Color get blueGray900 => Color(0XFF0B213B);

  Color get brown100 => Color(0XFF9F4300);

// Cyan
  Color get cyan100 => Color(0XFFB4FAFF);
  Color get cyan10001 => Color(0XFFA0F3FF);
  Color get cyan200 => Color(0XFF8CECF3);
  Color get cyan500 => Color(0XFF00C7CA);
  Color get cyanA100 => Color(0XFF8EF7FF);
  Color get cyanA400 => Color(0XFF01ECFF);
  Color get cyanA40001 => Color(0XFF01F0FF);
  Color get cyanA40002 => Color(0XFF01E0FF);

// DeepOrange
  Color get deepOrange100 => Color(0XFFFFD0B0);
  Color get deepOrange10001 => Color(0XFFFFDCC3);
  Color get deepOrande10 => Color(0XFFFFDDC3);
  Color get deepOrange10002 => Color(0XFFFFCAAB);
  Color get deepOrange200 => Color(0XFFF2BE99);
  Color get deepOrange300 => Color(0XFFFA9960);
  Color get deepOrange30001 => Color(0XFFFF8D4D);
  Color get deepOrange30002 => Color(0XFFFF8E4C);
  Color get deepOrange400 => Color(0XFFF68847);
  Color get deepOrange40001 => Color(0XFFFF853F);
  Color get deepOrange40002 => Color(0XFFF68643);
  Color get deepOrange600 => Color(0XFFE86124);
  Color get deepOrange60001 => Color(0XFFE45C22);
  Color get deepOrange700 => Color(0XFFDC4A26);
  Color get deepOrange70001 => Color(0XFFE25820);
  Color get deepOrange70002 => Color(0XFFE25A21);
  Color get deepOrange70003 => Color(0XFFE35B21);
  Color get deepOrange900 => Color(0XFF9E4200);
  Color get deepOrangeA100 => Color(0XFFFFA16A);
  Color get deepOrangeA10001 => Color(0XFFF2AB75);
  Color get deepOrangeA200 => Color(0XFFF47C37);
  Color get deepOrangeA20001 => Color(0XFFF27C36);
  Color get deepOrangeA400 => Color(0XFFFA3C00);
  Color get deepOrangeA700 => Color(0XFFF81212);
  Color get deepOrangeA70001 => Color(0XFFF51414);

// DeepPurple
  Color get deepPurpleA100 => Color(0XFFA55EFF);

// Gray
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray300 => Color(0XFFDFDFDF);
  Color get gray30001 => Color(0XFFE3E5E9);
  Color get gray400 => Color(0XFFBFBFBF);
  Color get gray50 => Color(0XFFFFF9F5);
  Color get gray500 => Color(0XFFA5A5A5);
  Color get gray50001 => Color(0XFFAAA7A7);
  Color get gray50003 => Color(0XFF929292);
  Color get gray5001 => Color(0XFFF9F9F9);
  Color get gray5002 => Color(0XFFFBF3FF);
  Color get gray5003 => Color(0XFFF5FFFF);
  Color get gray5004 => Color(0XFFFAFAFA);
  Color get gray800 => Color(0XFF6D3D19);
  Color get gray80001 => Color(0XFF683917);
  Color get gray900 => Color(0XFF502500);
  Color get gray90001 => Color(0XFF003028);
  Color get gray90002 => Color(0XFF1E1E1E);

// Green
  Color get green300 => Color(0XFF77F46C);
  Color get green30001 => Color(0XFF79FD6D);
  Color get green400 => Color(0XFF75BD5A);
  Color get green500 => Color(0XFF2FC23E);
  Color get green900 => Color(0XFF039600);

// LightBlue
  Color get lightBlue50 => Color(0XFFDBF4FF);
  Color get lightBlueA200 => Color(0XFF2ACCFF);

// LightGreen
  Color get lightGreen400 => Color(0XFFA8DE5A);
  Color get lightGreen40001 => Color(0XFFA4DA4A);
  Color get lightGreen500 => Color(0XFF83C82F);
  Color get lightGreen50001 => Color(0XFF89B15F);
  Color get lightGreen800 => Color(0XFF57912C);
  Color get lightGreen80001 => Color(0XFF429600);
  Color get lightGreen80002 => Color(0XFF569119);
  Color get lightGreenA700 => Color(0XFF68F824);
  Color get lightGreenA70001 => Color(0XFF6EBD1F);

// Lime
  Color get lime20082 => Color(0X82E4FB94);
  Color get lime300 => Color(0XFFCEF16C);
  Color get lime40082 => Color(0X82C1E95B);
  Color get lime800 => Color(0XFFAE7F38);
  Color get lime900 => Color(0XFF815730);
  Color get lime90001 => Color(0XFF895D34);
  Color get lime90002 => Color(0XFF885900);
  Color get lime90003 => Color(0XFF6D440F);

// Orange
  Color get orange100 => Color(0XFFFFCEA5);
  Color get orange10001 => Color(0XFFFDDFC7);
  Color get orange200 => Color(0XFFFFBD81);
  Color get orange300 => Color(0XFFFFAC5B);
  Color get orange30001 => Color(0XFFDFB04F);
  Color get orange30002 => Color(0XFFF2BC55);
  Color get orange400 => Color(0XFFFF9534);
  Color get orange40001 => Color(0XFFFF9F2E);
  Color get orange40002 => Color(0XFFFFAA2C);
  Color get orange50 => Color(0XFFFFF2D3);
  Color get orange5000 => Color(0X00FFF0E5);
  Color get orange600 => Color(0XFFD39800);
  Color get orange700 => Color(0XFFFF7A00);
  Color get orange900 => Color(0XFFD54E00);
  Color get orange90001 => Color(0XFFCA5B00);
  Color get orangeA200 => Color(0XFFFF9A3E);
  Color get orangeA700 => Color(0XFFF96900);

// OrangeD
  Color get orange400D8 => Color(0XD8FF9233);

// OrangeE
  Color get orange600E5 => Color(0XE5CF9500);

// OrangeABf
  Color get orangeA100Bf => Color(0XBFFFD468);

// Pink
  Color get pink300 => Color(0XFFFE6090);
  Color get pink30001 => Color(0XFFFF6194);
  Color get pink900 => Color(0XFF68182B);

// Red
  Color get red100 => Color(0XFFFDE2CF);
  Color get red10001 => Color(0XFFFEDFC8);
  Color get red300 => Color(0XFFFF7070);
  Color get red500 => Color(0XFFFF4242);
  Color get redA700 => Color(0XFFDB0000);

// Teal
  Color get teal800 => Color(0XFF226F54);
  Color get teal900 => Color(0XFF00404C);
  Color get teal90001 => Color(0XFF004D40);
  Color get teal90002 => Color(0XFF005A4B);
  Color get teal90003 => Color(0XFF023D33);

  Color get tealA200 => Color(0XFF65FFDA);

// White
  Color get whiteA700 => Color(0XFFFFFEFD);
  Color get whiteA70001 => Color(0XFFFFFFFF);

// Yellow
  Color get yellow400 => Color(0XFFFFED50);
  Color get yellow500 => Color(0XFFF0E92D);
  Color get yellow50001 => Color(0XFFEFE834);
  Color get yellow700 => Color(0XFFFFB62A);
  Color get yellow70001 => Color(0XFFFFB629);
  Color get yellow800 => Color(0XFFEFB521);
  Color get yellow900 => Color(0XFFCD7F32);
  Color get yellow90001 => Color(0XFFF2882C);
  Color get yellow90002 => Color(0XFFFF8011);
  Color get yellow90003 => Color(0XFFEF8521);
  Color get yellow90004 => Color(0XFFE86C23);
  Color get yellow90005 => Color(0XFFF78D11);
  Color get yellow90006 => Color(0XFFE98D32);
  Color get yellowA700 => Color(0XFFFFD600);

  get black90001 => null;
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
